def get_coincidence_index(text):
    n = len(text)
    freq = {}
    for char in text:
        freq[char] = freq.get(char, 0) + 1

    index_coincidence = sum(value * (value - 1) for value in freq.values()) / (n * (n - 1))
    return index_coincidence

freq_symb = [0.063, 0.014, 0.038, 0.013, 0.025, 0.072, 0.072, 0.007, 0.016, 0.062, 0.010, 0.028, 0.035, 0.026, 0.052, 0.090, 0.023, 0.040, 0.045, 0.053, 0.021, 0.01, 0.009, 0.004, 0.012, 0.005, 0.003, 0.015, 0.017, 0.015, 0.02, 0.06, 0.018]
al = []


one = ['!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+']
two = ['@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!']
three = ['#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@']
four = ['$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#']
five = ['%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@', '#','$']
six = ['^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@', '#','$','%']
seven = ['&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@', '#','$','%','^']
eight = ['*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@', '#','$','%','^','&']
nine = ['[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*']
ten = [']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[']
el = [')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']']
tw = ['(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')']
th_teen = ['=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(']
fo_teen = ['`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=']
fi_teen = [':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`']
si_teen = [';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':']
se_teen = ['{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';']
ei_teen = ['}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{']
n_teen = ['.',',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}']
twe = [',','<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.']
twe_o = ['<','>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',']
twe_tw = ['>','"','?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<']
twe_th = ['"','?','/',"'",'-','~','|','№','3','8','+', '!','@', '#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>']
twe_fo = ['?','/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"']
twe_fi = ['/',"'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?']
twe_si = ["'",'-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/']
twe_se = ['-','~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'"]
twe_ei = ['~','|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-']
twe_n = ['|','№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~']
thi = ['№','3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|']
thi_o = ['3','8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№']
thi_tw = ['8','+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3']
thi_th = ['+', '!','@','#','$','%','^','&','*','[',']',')','(','=','`',':',';','{','}','.',',','<','>','"','?','/',"'",'-','~','|','№','3','8']

table = [one, two, three, four, five, six, seven, eight, nine, ten, el, tw, th_teen, fo_teen, fi_teen, si_teen, se_teen, ei_teen, n_teen, twe, twe_o, twe_tw, twe_th, twe_th, twe_fo, twe_fi, twe_si, twe_se, twe_ei, twe_n, thi, thi_o, thi_tw, thi_th]


#create alphavite
a = ord('а')
for i in range(ord('а'), ord('я')+1):
    al.append(chr(i))
al.insert(6,chr(a+33))

dic = {}
for i in range(0, len(al)):
    dic[al[i]] = table[i]

print(dic['а'])

def vigenere_decrypt(ciphertext):
    n = len(ciphertext)
    best_period = 1
    best_index = 0.0

    for period in range(1, n//2 + 1):
        groups = [''.join(ciphertext[i] for i in range(j, n, period)) for j in range(period)]
        group_index = sum(get_coincidence_index(group) for group in groups) / period

        if abs(0.066 - group_index) < abs(0.066 - best_index):
            best_index = group_index
            best_period = period

    decrypted_text = ''
    key_word=""
    for i in range(best_period):
        group = ''.join(ciphertext[j] for j in range(i, n, best_period))
        #most_common_char = max(set(group), key = group.count)
        print(group)
        ind = get_coincidence_index(group)
        print(ind)
        for z in range(len(freq_symb)):
            #print(abs(freq_symb[z]-ind))
            if (abs(freq_symb[z]-ind)<=0.006):
                #print(z)
                key_word+=al[z]
                break;
    print(key_word)
    for i in range(0,len(ciphertext)):
        str_1 = dic[key_word[i%best_period]]
        #print(str_1)
        ind1 = str_1.index(ciphertext[i])
        #print(ind1)
        decrypted_text += al[ind1]
        #print(al[ind1])
    
        
        #shift = ord(most_common_char) - ord('e')
        #decrypted_group = ''.join(chr((ord(char) - shift - ord('А')) % 32 + ord('А')) if char.isalpha() else char for char in group)
        #decrypted_text += decrypted_group

    return decrypted_text

ciphertext = "<~-,3&(№83|#(№-=:3~=(-'?!;~;33^.3;%(,~')"
decrypted_text = vigenere_decrypt(ciphertext)
print(decrypted_text)
