MPI_Init, MPI_Finilize - нотации, служащие для определения участка       распараллеливания

MPI_Comm_Size - кол-во потоков

MPI_Comm_Rank - номер потока

Зная, какой поток что выполняет можно управлять

MPI_Send - отправляет сообщения

MPI_Probe - принимает сообщения

Виды структур:
 - точка точка:
	суть в том, что один процесс является инициализатором, он создает сообщение и отправляет его. Другие процессы ожидают сообщение для начала выполнения работы. Для этого они проверяют статус при помощи MPI_Status;
 


int MPI_Send(void* buf, int count, MPI_Datatype datatype, int dest, 
			int msgtag, MPI_Comm comm);
 buf - ссылка на адрес по которому лежат данные, которые мы пересылаем. В случае массивов ссылка на первый элемент.
 count - количество элементов в этом массиве, если отправляем просто переменную, то пишем 1.
 datatype - тут уже чутка посложнее, у MPI есть свои переопределенные типы данных которые существуют в С++. Их таблицу я приведу чуть дальше.
 dest - номер процесса кому отправляем сообщения.
 msgtag - ID сообщения (любое целое число)
 comm - Коммуникатор в котором находится процесс которому мы отправляем сообщение.

